
public class Palindrome {
	private class ListNode
	{
		int data;
		ListNode next;
		
		ListNode(int data)
		{
			this.data = data;
			next = null;
		}
	}
	
	ListNode head;
	
	public void listCreation()
	{
		head = new ListNode(1);
		ListNode node1 = new ListNode(2);
		ListNode node2 = new ListNode(3);
		ListNode node3 = new ListNode(3);
		ListNode node4 = new ListNode(2);
		ListNode node5 = new ListNode(1);
		//ListNode node6 = new ListNode(70);
		//ListNode node7 = new ListNode(80);
		head.next = node1;
		node1.next = node2;
		node2.next = node3;
		node3.next = node4;
		node4.next = node5;
		//node5.next = node6;
		//node6.next = node7; 
	}
	public void findMid()
	{
		ListNode slow, fast;
		slow = head;
		fast = head;
		ListNode prev_slow;
		while(fast != null && fast.next != null)
		{
			prev_slow = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		
		System.out.println(slow.data);
	}
	public void print()
	{
		ListNode temp = head;
		while(temp != null)
		{
			System.out.println(temp.data+"->");
			temp =temp.next;
		}
	}
	public ListNode reverse(ListNode head)
	{
		ListNode curr = head;
		ListNode prev = null;
		ListNode next = null;
		while(curr != null)
		{
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr =next;
			
		}
		head = prev;
		return head;
	}
	public boolean isPalindrome()
	{
		//reverse(head);

		ListNode slow, fast;
		slow = head;
		fast = head;
		ListNode prev_slow;
		while(fast != null && fast.next != null)
		{
			prev_slow = slow;
			slow = slow.next;
			fast = fast.next.next;
		}
		System.out.println(slow.data);
		if(fast != null)
		{ slow = slow.next;
		}
		//slow to null reverse
		ListNode secondHalf = reverse(slow);
		ListNode firstHalf = head;
		while(secondHalf != null)
		{
			if(secondHalf.data != firstHalf.data)
			{
				return false;
			}
			secondHalf = secondHalf.next;
			firstHalf = firstHalf.next;
		}
	
		return true;
	}
}
public class main {
	public static void main(String arg[])
	{
		  Palindrome list = new Palindrome();
		  list.listCreation();
		 
		  System.out.println(list.isPalindrome());
		  list.print();
	}
}


