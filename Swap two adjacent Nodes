Time complexity o(n) and space complexity o(1)

public class swapNodes {
	public void print(ListNode head)
	{
		ListNode temp = head;
		while(temp != null)
		{
			System.out.println(temp.data+"->");
			temp =temp.next;
		}
	}
	public ListNode swapNodes(ListNode head)
	{	if ((head == null)||(head.next == null))
        	return head;
		ListNode n = head.next;
		head.next = swapNodes(head.next.next);
		n.next = head;
		return n;
	
	}
}

public class ListNode {
	int data;
	ListNode next;
	
	ListNode(int data)
	{
		this.data = data;
		next = null;
	}
}
public class main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ListNode head1 = new ListNode(1);
		ListNode node1 = new ListNode(2);
		ListNode node2 = new ListNode(3);
		ListNode node3 = new ListNode(4);
	
		head1.next = node1;
		node1.next = node2;
		node2.next = node3;
		//node3.next = node4;
		
		swapNodes list = new swapNodes();
		list.print(head1);
		list.swapNodes(head1);
		list.print(list.swapNodes(head1));
	}

}
